---
title: An unexpected journey
description: A guy who lives and works as a Backend Developer in Indonesia—building useful and unexpected things, and making positive impacts for people. He loves to code and draw his own world—also has interests in art, writing, and journeys. He is on an unexpected journey and going to make it simple yet spectacular!
keywords: dali, dali kewara, dalikewara, posts, projects, website, art, writing, journey, developer, backend, software engineer
---
<!DOCTYPE html>
<html lang="en">
    <head>
        {% include "gtm.njk" %}
        {% include "seo.njk" %}
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{{ title }} | {{ site.author }}</title>
        <meta name="author" content="{{ site.author }}"/>
        <meta name="generator" content="{{ site.generator }}"/>
        <meta name="keywords" content="{{ keywords }}"/>
        <meta name="description" content="{{ description }}"/>
        <meta name="google-site-verification" content="{{ google.siteVerification }}"/>
        <link rel="stylesheet" href="/assets/css/hint.min.css">
        <link rel="stylesheet" href="/assets/css/scroll.min.css">
        <link rel="stylesheet" href="/assets/css/index.css">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Pixelify+Sans&family=Press+Start+2P&display=swap" rel="stylesheet">
        <link rel="apple-touch-icon" sizes="57x57" href="/assets/favicon/apple-icon-57x57.png">
        <link rel="apple-touch-icon" sizes="60x60" href="/assets/favicon/apple-icon-60x60.png">
        <link rel="apple-touch-icon" sizes="72x72" href="/assets/favicon/apple-icon-72x72.png">
        <link rel="apple-touch-icon" sizes="76x76" href="/assets/favicon/apple-icon-76x76.png">
        <link rel="apple-touch-icon" sizes="114x114" href="/assets/favicon/apple-icon-114x114.png">
        <link rel="apple-touch-icon" sizes="120x120" href="/assets/favicon/apple-icon-120x120.png">
        <link rel="apple-touch-icon" sizes="144x144" href="/assets/favicon/apple-icon-144x144.png">
        <link rel="apple-touch-icon" sizes="152x152" href="/assets/favicon/apple-icon-152x152.png">
        <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/apple-icon-180x180.png">
        <link rel="icon" type="image/png" sizes="192x192"  href="/assets/favicon/android-icon-192x192.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="96x96" href="/assets/favicon/favicon-96x96.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/favicon-16x16.png">
        <meta name="msapplication-TileImage" content="/assets/favicon/ms-icon-144x144.png">
        {% include "ga.njk" %}
    </head>
    <body>
        <noscript><iframe src="https://www.googletagmanager.com/ns.html?id={{ google.gtmid }}" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
        <div id="container">
            <div id="container-inner">
                {% include "header.njk" %}
                {{ content | safe }}
                {% include "footer.njk" %}
            </div>
        </div>
    </body>
    <script>
        let modeModeKey = "dalikewara.com_mode-mode-new";
        let modeModeIdKey = "dalikewara.com_mode-mode-id-new";
        let modeColorKey = "dalikewara.com_mode-color-new";
        let modeColorIdKey = "dalikewara.com_mode-color-id-new";
        function removeClassFromElems(elems, name) {
            elems.forEach(function(el) {
                el.classList.remove(name);
            });
        }
        function modeToggle(id, mode) {
            let elem = document.getElementById(id);
            let elemModes = document.querySelectorAll(".mode-mode");
            let elemColors = document.querySelectorAll(".mode-color");
            if (mode === "light") {
                removeClassFromElems(elemModes, "mode-toggle-active");
                elem.classList.toggle("mode-toggle-active");
                document.documentElement.style.setProperty("--bg-color", "var(--white)");
                document.documentElement.style.setProperty("--font-color", "var(--black)");
                document.documentElement.style.setProperty("--project-list-box-shadow-border", "var(--box-shadow-border-light)");
                localStorage.setItem(modeModeKey, mode);
                localStorage.setItem(modeModeIdKey, id);
            } else if (mode === "dark") {
                removeClassFromElems(elemModes, "mode-toggle-active");
                elem.classList.toggle("mode-toggle-active");
                document.documentElement.style.setProperty("--bg-color", "var(--dark)");
                document.documentElement.style.setProperty("--font-color", "var(--white-dark)");
                document.documentElement.style.setProperty("--project-list-box-shadow-border", "var(--box-shadow-border-dark)");
                localStorage.setItem(modeModeKey, mode);
                localStorage.setItem(modeModeIdKey, id);
            } else {
                removeClassFromElems(elemColors, "mode-toggle-active");
                elem.classList.toggle("mode-toggle-active");
                document.documentElement.style.setProperty("--color", "var(--"+ mode +")");
                localStorage.setItem(modeColorKey, mode);
                localStorage.setItem(modeColorIdKey, id);
            }
        }
        let currentModeMode = localStorage.getItem(modeModeKey);
        let currentModeModeId = localStorage.getItem(modeModeIdKey);
        if (currentModeMode == null) {
            modeToggle("mode-toggle-dark", "dark");
        } else {
            modeToggle(currentModeModeId, currentModeMode);
        }
        let currentModeColor = localStorage.getItem(modeColorKey);
        let currentModeColorId = localStorage.getItem(modeColorIdKey);
        if (currentModeColor == null) {
            modeToggle("mode-toggle-green", "green");
        } else {
            modeToggle(currentModeColorId, currentModeColor);
        }
        function getRandomRotateClass() {
            let items = [
                "rotate-0",
                "rotate-2",
                "rotate-5",
                "rotate-min-2",
                "rotate-min-5",
            ];
            return items[Math.floor(Math.random()*items.length)];
        }
        function getRandomRotateLessClass() {
            let items = [
                "rotate-2",
                "rotate-min-2",
            ];
            return items[Math.floor(Math.random()*items.length)];
        }
        function rotateProjectList() {
            document.querySelectorAll(".project-list-item").forEach(function(el) {
                el.classList.add(getRandomRotateClass());
            });
        }
        function rotateStabilo() {
            document.querySelectorAll(".stabilo").forEach(function(el) {
                el.classList.add(getRandomRotateLessClass());
            });
        }
        rotateProjectList();
        rotateStabilo();
    </script>
</html>